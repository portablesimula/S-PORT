% ***************************************************************
%                                                               *
%     Definition of single character keyboard input             *
%     Conforms to release 109.2.2 of PC Simula                  *
%                                                               *
% ***************************************************************

%  1. Named constants for special key mapped character (lastkey.map)
%     ************************************************

   character
    Inskey    = '!03!',  Rightkey = '!04!', Leftkey = '!05!',
    Rubout    = '!08!',  Tabkey   = '!09!', Lfkey   = '!10!', !Ctrl-Enter;
    Crkey     = '!13!',  Downkey  = '!14!', Homekey = '!15!',
%   Crkey is Enter.
    Endkey    = '!26!',  Esckey   = '!27!', Upkey   = '!28!',
    Backtab   = '!29!',  PgUpkey  = '!30!', PgDnkey = '!31!',
    Delkey    ='!127!',

    Funckey   = '!01!';  !value for all other special keys;
 

%  2. Function key definitions (lastkey.fkey)
%     ************************

   integer
    F1  =  1,   shiftF1  = 17,   ctrlF1   = 33,   altF1    = 49,
    F2  =  2,   shiftF2  = 18,   ctrlF2   = 34,   altF2    = 50,
    F3  =  3,   shiftF3  = 19,   ctrlF3   = 35,   altF3    = 51,
    F4  =  4,   shiftF4  = 20,   ctrlF4   = 36,   altF4    = 52,
    F5  =  5,   shiftF5  = 21,   ctrlF5   = 37,   altF5    = 53,
    F6  =  6,   shiftF6  = 22,   ctrlF6   = 38,   altF6    = 54,
    F7  =  7,   shiftF7  = 23,   ctrlF7   = 39,   altF7    = 55,
    F8  =  8,   shiftF8  = 24,   ctrlF8   = 40,   altF8    = 56,
    F9  =  9,   shiftF9  = 25,   ctrlF9   = 41,   altF9    = 57,
    F10 = 10,   shiftF10 = 26,    ctrlF10 = 42,   altF10   = 58,
    F11 = 11,   shiftF11 = 27,    ctrlF11 = 43,   altF11   = 59,
    F12 = 12,   shiftF12 = 28,    ctrlF12 = 44,   altF12   = 60,

    fkHome     = 65,    fkUp       = 67,   fkMinus     = 68,
    fkLeft     = 69,    fkNum5     = 70,   fkPlus      = 72,
    fkEnd      = 73,    fkDown     = 74,   fkPgDn      = 75,
    fkIns      = 76,    fkDel      = 77,   fkBacktab   = 80,
    fkCtrlHome = 81,    fkCtrlPgUp = 83,   fkCtrlEnd   = 84,
    fkCtrlPgDn = 86,    fkCtrlLeft = 87,   fkCtrlRight = 89,

    fkUnknown  =255;    ! value for all other special keys;
 

%  3. Input facilities
%     ****************
 
   class keyPkt; begin
      character map;         ! mapped input character;
      character chr;         ! unmapped character;
      short integer fKey;    ! function key code;
      character c0, c1, c2;  ! OS-dependent contents;
   end;

   ref(keyPkt) lastKey;

%     DOS:
%       normally only map and chr are set (to the same value),
%       and the remainder of the packet is zero.
%       chr=0 may mean either no key pressed (ifchar only, map=0)
%             or special char read: c0, fKey set, map changed
%       c1 and c2 are unused (i.e. undefined) always

%     OS2:
%       normally, map and chr are set (to the same value) and
%       c0=scan code, c1-c2 = scanstate (shift key state) 
%       if a special key was pressed, fKey is set and map changed

%     Unix/Xenix:
%       normally only map and chr are set (to the same value),
%       and the remainder of the packet is zero
%       Escape sequences (special keys) are stored in c0,c1,c2
%       with c0=EscKey (=chr). In this case, fKey is set and
%       map changed.

      external Pascal procedure KEYIN="E@KEYIN" is
      procedure KEYIN(wait, pkt); value wait; name pkt;
                                  boolean wait; ref(keyPkt) pkt;
      ; !*** KEYIN should be specified hidden protected ***;

      character procedure ifchar;
      begin KEYIN(false,lastKey); ifchar:= lastKey.map end;

      character procedure inchar;
      begin KEYIN(true, lastKey); inchar:= lastKey.map end;

%  end of KEYBOARD.INS
